SET client_min_messages=NOTICE;
CREATE EXTENSION multicorn;
CREATE server multicorn_srv foreign data wrapper multicorn options (
    wrapper 'multicorn.testfdw.TestForeignDataWrapper'
);
CREATE user mapping for postgres server multicorn_srv options (usermapping 'test');
-- Test for two thing: first, that when a low total row count, 
-- a full seq scan is used on a join.
CREATE foreign table testmulticorn (
    test1 character varying,
    test2 character varying
) server multicorn_srv options (
    option1 'option1'
);
explain (costs off) select * from testmulticorn;
NOTICE:  [('option1', 'option1'), ('usermapping', 'test')]
NOTICE:  [('test1', 'character varying'), ('test2', 'character varying')]
          QUERY PLAN           
-------------------------------
 Foreign Scan on testmulticorn
(1 row)

explain (costs off) select * from testmulticorn m1 inner join testmulticorn m2 on m1.test1 = m2.test1;
                      QUERY PLAN                      
------------------------------------------------------
 Nested Loop
   Join Filter: ((m1.test1)::text = (m2.test1)::text)
   ->  Foreign Scan on testmulticorn m1
   ->  Materialize
         ->  Foreign Scan on testmulticorn m2
(5 rows)

explain (costs off) select * from testmulticorn m1 left outer join testmulticorn m2 on m1.test1 = m2.test1;
                      QUERY PLAN                      
------------------------------------------------------
 Nested Loop Left Join
   Join Filter: ((m1.test1)::text = (m2.test1)::text)
   ->  Foreign Scan on testmulticorn m1
   ->  Materialize
         ->  Foreign Scan on testmulticorn m2
(5 rows)

DROP foreign table testmulticorn;
-- Second, when a total row count is high 
-- a parameterized path is used on the test1 attribute.
CREATE foreign table testmulticorn (
    test1 character varying,
    test2 character varying
) server multicorn_srv options (
    option1 'option1',
    test_type 'planner'
);
explain (costs off) select * from testmulticorn;
NOTICE:  [('option1', 'option1'), ('test_type', 'planner'), ('usermapping', 'test')]
NOTICE:  [('test1', 'character varying'), ('test2', 'character varying')]
          QUERY PLAN           
-------------------------------
 Foreign Scan on testmulticorn
(1 row)

explain (costs off) select * from testmulticorn m1 inner join testmulticorn m2 on m1.test1 = m2.test1;
                     QUERY PLAN                     
----------------------------------------------------
 Nested Loop
   ->  Foreign Scan on testmulticorn m1
   ->  Foreign Scan on testmulticorn m2
         Filter: ((m1.test1)::text = (test1)::text)
(4 rows)

explain (costs off) select * from testmulticorn m1 left outer join testmulticorn m2 on m1.test1 = m2.test1;
                     QUERY PLAN                     
----------------------------------------------------
 Nested Loop Left Join
   ->  Foreign Scan on testmulticorn m1
   ->  Foreign Scan on testmulticorn m2
         Filter: ((m1.test1)::text = (test1)::text)
(4 rows)

DROP EXTENSION multicorn cascade;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to server multicorn_srv
drop cascades to user mapping for postgres
drop cascades to foreign table testmulticorn
